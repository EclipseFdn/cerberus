<!-- Copyright (c) 2019 Eclipse Foundation and others. This program and the
	accompanying materials are made available under the terms of the Eclipse
	Public License 2.0 which is available at http://www.eclipse.org/legal/epl-v20.html
	SPDX-License-Identifier: EPL-2.0 -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.eclipsefoundation.cerberus</groupId>
	<artifactId>cerberus</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.release>11</maven.compiler.release>
		<picocli.version>4.6.2</picocli.version>
		<okhttp3.version>4.9.3</okhttp3.version>
		<auto-value.version>1.8.2</auto-value.version>
		<auto-value-moshi.version>1.0.0</auto-value-moshi.version>
		<retrofit.version>2.9.0</retrofit.version>
		<dagger.version>2.40.4</dagger.version>
		<fail.on.failed.analysis>false</fail.on.failed.analysis>
		<main.class>org.eclipsefoundation.cerberus.Cerberus</main.class>
		<mainCommand.class>org.eclipsefoundation.cerberus.Cerberus</mainCommand.class>
		<native.filename>${project.artifactId}-${project.version}</native.filename>
		<junit.jupiter.version>5.8.2</junit.jupiter.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>com.squareup.okhttp3</groupId>
			<artifactId>okhttp</artifactId>
		</dependency>
		<dependency>
			<groupId>com.squareup.okhttp3</groupId>
			<artifactId>logging-interceptor</artifactId>
		</dependency>
		<dependency>
			<groupId>com.squareup.retrofit2</groupId>
			<artifactId>retrofit</artifactId>
		</dependency>
		<dependency>
			<groupId>com.squareup.retrofit2</groupId>
			<artifactId>converter-scalars</artifactId>
		</dependency>
		<dependency>
			<groupId>com.squareup.retrofit2</groupId>
			<artifactId>converter-moshi</artifactId>
		</dependency>
		<dependency>
			<groupId>com.squareup.moshi</groupId>
			<artifactId>moshi</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.auto.value</groupId>
			<artifactId>auto-value-annotations</artifactId>
		</dependency>
		<dependency>
			<groupId>com.ryanharter.auto.value</groupId>
			<artifactId>auto-value-moshi-annotations</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.dagger</groupId>
			<artifactId>dagger</artifactId>
		</dependency>
		<dependency>
			<groupId>info.picocli</groupId>
			<artifactId>picocli</artifactId>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.code.findbugs</groupId>
			<artifactId>jsr305</artifactId>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.squareup.okio</groupId>
				<artifactId>okio</artifactId>
				<version>2.10.0</version>
			</dependency>
			<dependency>
				<groupId>com.squareup.okhttp3</groupId>
				<artifactId>okhttp</artifactId>
				<version>${okhttp3.version}</version>
			</dependency>
			<dependency>
				<groupId>com.squareup.retrofit2</groupId>
				<artifactId>retrofit</artifactId>
				<version>${retrofit.version}</version>
			</dependency>
			<dependency>
				<groupId>com.squareup.okhttp3</groupId>
				<artifactId>logging-interceptor</artifactId>
				<version>${okhttp3.version}</version>
			</dependency>
			<dependency>
				<groupId>com.squareup.retrofit2</groupId>
				<artifactId>converter-scalars</artifactId>
				<version>${retrofit.version}</version>
			</dependency>
			<dependency>
				<groupId>com.squareup.retrofit2</groupId>
				<artifactId>converter-moshi</artifactId>
				<version>${retrofit.version}</version>
			</dependency>
			<dependency>
				<groupId>com.squareup.moshi</groupId>
				<artifactId>moshi</artifactId>
				<version>1.12.0</version>
			</dependency>
			<dependency>
				<groupId>com.google.auto.value</groupId>
				<artifactId>auto-value-annotations</artifactId>
				<version>${auto-value.version}</version>
			</dependency>
			<dependency>
				<groupId>com.ryanharter.auto.value</groupId>
				<artifactId>auto-value-moshi-annotations</artifactId>
				<version>${auto-value-moshi.version}</version>
			</dependency>
			<dependency>
				<groupId>info.picocli</groupId>
				<artifactId>picocli</artifactId>
				<version>${picocli.version}</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>1.2.7</version>
			</dependency>
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>32.0.0-jre</version>
			</dependency>
			<dependency>
				<groupId>com.google.dagger</groupId>
				<artifactId>dagger</artifactId>
				<version>${dagger.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.code.findbugs</groupId>
				<artifactId>jsr305</artifactId>
				<version>3.0.2</version>
			</dependency>
			<dependency>
				<groupId>org.jetbrains.kotlin</groupId>
				<artifactId>kotlin-stdlib</artifactId>
				<version>1.4.32</version>
			</dependency>
			<dependency>
				<groupId>org.jetbrains.kotlin</groupId>
				<artifactId>kotlin-stdlib-common</artifactId>
				<version>1.4.32</version>
			</dependency>
			<dependency>
				<groupId>org.junit.jupiter</groupId>
				<artifactId>junit-jupiter-api</artifactId>
				<version>${junit.jupiter.version}</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>version.txt</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
				<excludes>
					<exclude>version.txt</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>launchers</directory>
				<targetPath>../launchers</targetPath>
				<filtering>true</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<compilerArgs>
						<arg>-Xlint:all</arg>
						<arg>-Xlint:-unchecked</arg>
						<!-- picocli-codegen annotation processor output subdirectory (full
							directory is ${project.build.outputDirectory}/META-INF/native-image/picocli-generated/${project} -->
						<arg>-Aproject=${project.groupId}/${project.artifactId}</arg>
					</compilerArgs>
					<annotationProcessorPaths>
						<path>
							<groupId>info.picocli</groupId>
							<artifactId>picocli-codegen</artifactId>
							<version>${picocli.version}</version>
						</path>
						<path>
							<groupId>com.google.auto.value</groupId>
							<artifactId>auto-value</artifactId>
							<version>${auto-value.version}</version>
						</path>
						<path>
							<groupId>com.ryanharter.auto.value</groupId>
							<artifactId>auto-value-moshi-extension</artifactId>
							<version>${auto-value-moshi.version}</version>
						</path>
						<path>
							<groupId>com.google.dagger</groupId>
							<artifactId>dagger-compiler</artifactId>
							<version>${dagger.version}</version>
						</path>
					</annotationProcessorPaths>
					<annotationProcessors>
						<annotationProcessor>dagger.internal.codegen.ComponentProcessor</annotationProcessor>
						<annotationProcessor>com.google.auto.value.processor.AutoValueProcessor</annotationProcessor>
						<annotationProcessor>picocli.codegen.aot.graalvm.processor.NativeImageConfigGeneratorProcessor</annotationProcessor>
					</annotationProcessors>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<mainClass>${main.class}</mainClass>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<shadedArtifactAttached>true</shadedArtifactAttached>
							<shadedClassifierName>shaded</shadedClassifierName>
							<minimizeJar>true</minimizeJar>
							<transformers>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<manifestEntries>
										<Main-Class>${main.class}</Main-Class>
										<Implementation-Title>${project.artifactId}</Implementation-Title>
										<Implementation-Version>${project.version}</Implementation-Version>
									</manifestEntries>
								</transformer>
							</transformers>
							<artifactSet>
								<excludes>
									<exclude>com.google.code.findbugs:jsr305</exclude>
								</excludes>
							</artifactSet>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jlink-plugin</artifactId>
				<configuration>
					<compression>2</compression>
					<noHeaderFiles>true</noHeaderFiles>
					<noManPages>true</noManPages>
					<stripDebug>true</stripDebug>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>generate-autocompletion-script</id>
						<phase>package</phase>
						<goals>
							<goal>exec</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<executable>${JAVA_HOME}/bin/java</executable>
					<arguments>
						<argument>-Dpicocli.autocomplete.systemExitOnError</argument>
						<argument>-XshowSettings:vm</argument>
						<argument>-Xms1g</argument>
						<argument>-Xmx2g</argument>
						<argument>-XX:+IgnoreUnrecognizedVMOptions</argument>
						<argument>-Xquickstart</argument>
						<argument>-Xshareclasses:name=picocli,cacheDir=${TMPDIR}/javasharedresources</argument>
						<argument>-Xscmx256m</argument>
						<argument>-XX:SharedCacheHardLimit=512m</argument>
						<argument>-cp</argument>
						<classpath />
						<argument>picocli.AutoComplete</argument>
						<argument>--completionScript</argument>
						<argument>${project.build.directory}/${project.artifactId}-${project.version}-completion.sh</argument>
						<argument>--force</argument>
						<argument>${mainCommand.class}</argument>
					</arguments>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<executions>
					<execution>
						<id>enforce-maven</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<dependencyConvergence/>
								<requireMavenVersion>
									<version>3.8.4</version>
								</requireMavenVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<dependencies>
					<dependency>
						<groupId>org.junit.jupiter</groupId>
						<artifactId>junit-jupiter-engine</artifactId>
						<version>${junit.jupiter.version}</version>
					</dependency>
				</dependencies>
				<configuration>
					<parallel>methods</parallel>
					<threadCount>8</threadCount>
				</configuration>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.8.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>3.2.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-shade-plugin</artifactId>
					<version>3.2.4</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jlink-plugin</artifactId>
					<version>3.0.0-alpha-1</version>
					<extensions>true</extensions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>3.0.0-M2</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>3.1.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>3.0.0-M1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>3.0.0-M1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>3.2.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>3.9.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>3.0.0-M4</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
					<version>1.6.0</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>versions-maven-plugin</artifactId>
					<version>2.7</version>
					<configuration>
						<rulesUri>file:///${project.basedir}/maven-updates-rules.xml</rulesUri>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>3.1.1</version>
				</plugin>
				<plugin>
					<groupId>com.github.spotbugs</groupId>
					<artifactId>spotbugs-maven-plugin</artifactId>
					<version>4.0.0</version>
				</plugin>
				<plugin>
					<groupId>org.graalvm.nativeimage</groupId>
					<artifactId>native-image-maven-plugin</artifactId>
					<version>21.2.0</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<profile>
			<id>quality</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-checkstyle-plugin</artifactId>
						<configuration>
							<configLocation>google_checks.xml</configLocation>
							<violationSeverity>warning</violationSeverity>
							<failOnViolation>${fail.on.failed.analysis}</failOnViolation>
						</configuration>
						<executions>
							<execution>
								<id>validate</id>
								<phase>validate</phase>
								<goals>
									<goal>check</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>com.github.spotbugs</groupId>
						<artifactId>spotbugs-maven-plugin</artifactId>
						<configuration>
							<effort>Max</effort>
							<threshold>Low</threshold>
							<xmlOutput>true</xmlOutput>
							<excludeFilterFile>spotbugs_ignore.xml</excludeFilterFile>
							<failOnError>${fail.on.failed.analysis}</failOnError>
						</configuration>
						<executions>
							<execution>
								<goals>
									<goal>check</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>native</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.graalvm.nativeimage</groupId>
						<artifactId>native-image-maven-plugin</artifactId>
						<executions>
							<execution>
								<goals>
									<goal>native-image</goal>
								</goals>
								<phase>package</phase>
							</execution>
						</executions>
						<configuration>
							<imageName>${native.filename}</imageName>
							<buildArgs>
								<buildArg>--enable-https</buildArg>
								<buildArg>--no-fallback</buildArg>
								<buildArg>--allow-incomplete-classpath</buildArg>
								<buildArg>--report-unsupported-elements-at-runtime</buildArg>
								<buildArg>--initialize-at-build-time=okhttp3,okio,kotlin.text.Charsets,org.eclipsefoundation.cerberus.services</buildArg>
							</buildArgs>
							<!-- allow-incomplete-classpath mandatory for retrofit2 optional dependency
								to kotlin.coroutines.Continuation. -->
							<!-- report-unsupported-elements-at-runtime required because unsupported
								type java.lang.invoke.MemberName is reachable -->
							<!-- initialize-at-build-time required by retrofit2 services and unroll
								to okttp3/okio -->
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>ide</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<property>
					<name>RUN_IN_IDE</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<directory>${project.basedir}/target_ide</directory>
			</build>
			<dependencies>
				<dependency>
					<groupId>org.junit.jupiter</groupId>
					<artifactId>junit-jupiter-engine</artifactId>
				</dependency>
				<dependency>
					<groupId>org.junit.platform</groupId>
					<artifactId>junit-platform-launcher</artifactId>
				</dependency>
			</dependencies>
			<dependencyManagement>
				<dependencies>
					<dependency>
						<groupId>org.junit.jupiter</groupId>
						<artifactId>junit-jupiter-engine</artifactId>
						<version>${junit.jupiter.version}</version>
						<scope>test</scope>
					</dependency>
					<dependency>
						<groupId>org.junit.platform</groupId>
						<artifactId>junit-platform-launcher</artifactId>
						<version>1.6.0</version>
						<scope>test</scope>
					</dependency>
				</dependencies>
			</dependencyManagement>
		</profile>
	</profiles>
</project>